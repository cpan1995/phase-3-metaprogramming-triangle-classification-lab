
[1mFrom:[0m /home/cpan1995/phase3/phase-3-metaprogramming-triangle-classification-lab/lib/triangle.rb:28 Triangle#kind:

    [1;34m10[0m: [32mdef[0m [1;34mkind[0m
    [1;34m11[0m:   [1;34m# @uniq_counter.each { |num|[0m
    [1;34m12[0m:   [1;34m#   if num.negative?[0m
    [1;34m13[0m:   [1;34m#     begin[0m
    [1;34m14[0m:   [1;34m#       raise TriangleError[0m
    [1;34m15[0m:   [1;34m#     rescue TriangleError => error[0m
    [1;34m16[0m:   [1;34m#       puts error.message[0m
    [1;34m17[0m:   [1;34m#     end[0m
    [1;34m18[0m:   [1;34m#   end[0m
    [1;34m19[0m:   [1;34m# }[0m
    [1;34m20[0m: 
    [1;34m21[0m:   [1;34m# if @uniq_counter.include?(0)[0m
    [1;34m22[0m:   [1;34m#   begin[0m
    [1;34m23[0m:   [1;34m#     raise TriangleError[0m
    [1;34m24[0m:   [1;34m#   rescue => error[0m
    [1;34m25[0m:   [1;34m#     puts error.message[0m
    [1;34m26[0m:   [1;34m#   end[0m
    [1;34m27[0m:   [1;34m# end[0m
 => [1;34m28[0m:   binding.pry
    [1;34m29[0m:   puts [31m[1;31m"[0m[31mhi[1;31m"[0m[31m[0m
    [1;34m30[0m:   [32mif[0m @uniq_counter.uniq.length == [1;34m1[0m
    [1;34m31[0m:     [32mreturn[0m [33m:equilateral[0m
    [1;34m32[0m:   [32melsif[0m @uniq_counter.uniq.length == [1;34m2[0m
    [1;34m33[0m:     [32mreturn[0m [33m:isosceles[0m
    [1;34m34[0m:   [32melsif[0m @uniq_counter.uniq.length == [1;34m3[0m
    [1;34m35[0m:     [32mreturn[0m [33m:scalene[0m
    [1;34m36[0m:   [32mend[0m
    [1;34m37[0m: 
    [1;34m38[0m: [32mend[0m

